@{
    ViewData["Title"] = "Pizza";
    ViewData["Subtitle"] = "Edit";
}

@using PizzaStore.Data

@model PizzaEditViewModel

<h1>@ViewBag.Title</h1>
<h2>@ViewBag.Subtitle</h2>
<hr />

<form asp-controller="Pizza" asp-action="Edit" enctype="multipart/form-data">
    <input type="hidden" asp-for="Id" />

    <div class="form-group">
        <label asp-for="Name" class="control-label"></label>
        <input asp-for="Name" class="form-control" />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Price" class="control-label"></label>
        <input asp-for="Price" class="form-control" />
        <span asp-validation-for="Price" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="ImageUrl" class="control-label"></label>
        <input asp-for="ImageUrl" class="form-control" />
        <span asp-validation-for="ImageUrl" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label>Ingredients</label><br />
        @for (var index = 0; index < @Model.CheckBoxItems.Count(); index++)
        {
            <input type="checkbox" asp-for="@Model.CheckBoxItems[index].IsChecked" class="form-check-input" />
            <label class="form-check-label" asp-for="@Model.CheckBoxItems[index].IsChecked">
                @Model.CheckBoxItems[index].LabelName
            </label>
            <input type="hidden" asp-for="@Model.CheckBoxItems[index].Id" />
            <input type="hidden" asp-for="@Model.CheckBoxItems[index].LabelName" />
            <br />
        }
        <span asp-validation-for="CheckBoxItems" class="text-danger"></span>
    </div>

    <br />
    <div class="form-group">
        <a class="btn btn-secondary" asp-controller="Pizza" asp-action="Index" style="margin-right: 1em;">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-x" viewBox="0 0 16 16">
                <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z" />
            </svg>
            Cancel
        </a>
        <button type="submit" class="btn btn-success">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-check" viewBox="0 0 16 16">
                <path d="M10.97 4.97a.75.75 0 0 1 1.07 1.05l-3.99 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.267.267 0 0 1 .02-.022z" />
            </svg>
            Update
        </button>
    </div>
</form>

<!-- price decimal point fix zoals ik had bij bookstore -->
@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial.cshtml")
    <script>
        $.validator.methods.number = function (value, element) {
            return this.optional(element) || /^-?(?:\d+|\d{1,3}(?:\.\d{3})+)(?:,\d+)?$/.test(value);
        };
        $.validator.messages.number = "Please enter a valid number.";
    </script>
}
