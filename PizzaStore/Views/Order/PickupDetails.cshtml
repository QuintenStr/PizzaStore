@using PizzaStore.Data;
@using System.Globalization;
@model PickupOrderViewModel;
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService authService

@{
    ViewData["Title"] = "Pickup Order";
    ViewData["Subtitle"] = "Details";
}

<h1>@ViewBag.Title</h1>
<h2>@ViewBag.Subtitle</h2>
<hr />

@if ((await authService.AuthorizeAsync(User, "MinRankStaff")).Succeeded)
{
    <a class="btn btn-outline-secondary" asp-controller="Staff" asp-action="Index">
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-left" viewBox="0 0 16 16">
            <path fill-rule="evenodd" d="M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8z" />
        </svg>
        Return to staff overview
    </a>

    <hr />
}

<ul>
    @{
        double totalPrice = 0;
        @foreach (OrderLine l in @Model.OrderLines)
        {
            string toppings;
            {
                if (l.ExtraToppings.Count() == 0)
                {
                    toppings = null;
                }
                else
                {
                    toppings = "(" + string.Join(", ", l.ExtraToppings.Select(topping => "+ " + topping.Name)) + ")";
                }
            }
            <li>
                <p>
                    @l.PizzaSize @l.Pizza.Name @toppings @l.Price.ToString("C", CultureInfo.GetCultureInfo("nl-BE"))
                </p>
            </li>
            totalPrice += @l.Price;
        }
    }
</ul>
Total: @totalPrice.ToString("C", CultureInfo.GetCultureInfo("nl-BE"))

<hr />

<form asp-controller="Order" asp-action="PickupDetails" enctype="multipart/form-data">
    <input type="hidden" asp-for="Id" />

    <div class="form-group">
        <label asp-for="FirstName" class="control-label"></label>
        <input asp-for="FirstName" class="form-control" readonly/>
        <span asp-validation-for="FirstName" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="LastName" class="control-label"></label>
        <input asp-for="LastName" class="form-control" readonly />
        <span asp-validation-for="LastName" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="PickupTime" class="control-label"></label>
        <input asp-for="PickupTime" class="form-control" readonly />
        <span asp-validation-for="PickupTime" class="text-danger"></span>
    </div>

    @if ((await authService.AuthorizeAsync(User, "MinRankStaff")).Succeeded)
    {
        <div class="form-group">
            <label class="control-label">Status</label>
            @Html.DropDownListFor(m => m.Status, (SelectList)ViewBag.StatusList, new { @class = "form-select" })
        </div>
    }
    else
    {
        <label class="control-label">Status</label>
        <input value="@Model.Status.ToString()" class="form-control" readonly />
    }

    <br />
    @if ((await authService.AuthorizeAsync(User, "MinRankStaff")).Succeeded)
    {
    <div class="form-group">
        <button type="submit" class="btn btn-primary">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
                <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2Z" />
            </svg>
            Save
        </button>
    </div>
    }
</form>